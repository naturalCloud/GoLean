// =================================================================================
// This is auto-generated by GoFrame CLI tool only once. Fill this file as you wish.
// =================================================================================

package dao

import (
	"context"
	"gfDeomo/internal/dao/internal"
	"gfDeomo/internal/model/entity"
)

// internalArticlesDao is internal type for wrapping internal DAO implements.
type internalArticlesDao = *internal.ArticlesDao

// articlesDao is the data access object for table articles.
// You can define custom methods on it to extend its functionality as you wish.
type articlesDao struct {
	internalArticlesDao
}

var (
	// Articles is globally public accessible object for table articles operations.
	Articles = articlesDao{
		internal.NewArticlesDao(),
	}
)

// Fill with you ideas below.

func (a articlesDao) Get(ctx context.Context) []entity.Articles {
	result, _ := a.Ctx(ctx).Where("id > ?", 0).All()

	articles := make([]entity.Articles, result.Len())

	for _, record := range result {
		var s entity.Articles
		record.Struct(&s)
		articles = append(articles, s)
	}

	return articles
}
