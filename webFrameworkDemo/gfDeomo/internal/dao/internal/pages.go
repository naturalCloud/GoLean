// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PagesDao is the data access object for table pages.
type PagesDao struct {
	table   string       // table is the underlying table name of the DAO.
	group   string       // group is the database configuration group name of current DAO.
	columns PagesColumns // columns contains all the column names of Table for convenient usage.
}

// PagesColumns defines and stores column names for table pages.
type PagesColumns struct {
	Id          string //
	Title       string // 页面标题
	LinkAlias   string // 链接别名
	Keyword     string // 关键词
	Desc        string // 描述
	Content     string // 页面markdown格式
	HtmlContent string // 页面html
	CreatedAt   string //
	UpdatedAt   string //
}

//  pagesColumns holds the columns for table pages.
var pagesColumns = PagesColumns{
	Id:          "id",
	Title:       "title",
	LinkAlias:   "link_alias",
	Keyword:     "keyword",
	Desc:        "desc",
	Content:     "content",
	HtmlContent: "html_content",
	CreatedAt:   "created_at",
	UpdatedAt:   "updated_at",
}

// NewPagesDao creates and returns a new DAO object for table data access.
func NewPagesDao() *PagesDao {
	return &PagesDao{
		group:   "default",
		table:   "pages",
		columns: pagesColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PagesDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PagesDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PagesDao) Columns() PagesColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PagesDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PagesDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PagesDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
